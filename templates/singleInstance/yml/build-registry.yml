---
AWSTemplateFormatVersion: '2010-09-09'
Description: Deploys NiFi Registry Instance for Apache NiFi Cluster.
Parameters:
  InitialStackName:
    Description: Name of an active CloudFormation stack that contains the initial resources.
    Type: String
    MinLength: 1
    MaxLength: 255
    AllowedPattern: "^[a-zA-Z][-a-zA-Z0-9]*$"
    Default: nifi-network
  KeyName:
    Description: Name of an existing EC2 KeyPair to enable SSH access to the instance
    Type: AWS::EC2::KeyPair::KeyName
    ConstraintDescription: must be the name of an existing EC2 KeyPair.
  RegistryInstanceType:
    Description: Registry EC2 instance type
    Type: String
    Default: t2.micro
  RegistryAMI:
    Description: Use Latest Amazon ECS-optimized AMIs
    Type: 'AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>'
    Default: /aws/service/ecs/optimized-ami/amazon-linux-2/recommended/image_id
  SSHLocation:
    Description: The IP address range that can be used to SSH to the EC2 instances
    Type: String
    MinLength: '9'
    MaxLength: '18'
    Default: 0.0.0.0/0
    AllowedPattern: "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})"
    ConstraintDescription: must be a valid IP CIDR range of the form x.x.x.x/x.
Resources:
  Registry1Instance:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType:
        Ref: RegistryInstanceType
      SecurityGroupIds:
      - Ref: RegistryInstanceSecurityGroup
      KeyName:
        Ref: KeyName
      ImageId:
        Ref: RegistryAMI
      PrivateIpAddress: 10.0.1.16
      SubnetId:
        Fn::ImportValue:
          Fn::Sub: "${InitialStackName}-Subnet1ID"
      Tags:
      - Key: Name
        Value: Registry 1
      UserData:
         Fn::Base64: !Sub |
          #!/bin/bash -xe
          exec > >(tee /var/log/user-data.log|logger -t user-data -s 2>/dev/console) 2>&1
          yum update -y && yum -y install vim wget git java-1.8.0 ntp
          cd /opt/
          wget http://apache.mirror.amaze.com.au/nifi/nifi-registry/nifi-registry-0.5.0/nifi-registry-0.5.0-bin.tar.gz
          gunzip -c nifi-registry-0.5.0-bin.tar.gz | tar xvf -
          #Install as a Service   
          /opt/nifi-registry-0.5.0/bin/nifi-registry.sh install
          #Set HTTP Host
          sed -i "/nifi.registry.web.http.host=/ s/=.*/=10.0.1.16/" /opt/nifi-registry-0.5.0/conf/nifi-registry.properties
          #Set Port
          sed -i "/nifi.registry.web.http.host=/ s/=.*/=10.0.1.16/" /opt/nifi-registry-0.5.0/conf/nifi-registry.properties
          
          #Clone Git Repo 
          git clone https://github.com/${GIT-USER}/${GIT-REPOSITORY}.git ${GIT-LOCAL-FOLDER}
          


          
          #Set Service to start on boot
          chkconfig nifi-registry on
          #Start the service 
          service nifi-registry start
  RegistryInstanceSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Group for Registry instances
      SecurityGroupIngress:
      - IpProtocol: "-1"
        CidrIp: 0.0.0.0/0
      VpcId:
        Fn::ImportValue:
          Fn::Sub: "${InitialStackName}-VPCID"
Outputs:
  RegistryIPAddresses:
    Description: Registry IP Addresses
    Value: 10.0.1.15:2181
    Export:
      Name:
        Fn::Sub: "${AWS::StackName}-RegistryIPAddresses"
